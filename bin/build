#!/bin/bash
#
# This script builds a release version of
# the software for each supported platform.
#############################################

function display_vairiables {
    echo "-------------------------------------------------------"
    echo ""
    echo "NOTE: Java must be installed or fop will fail and the pdf will not build."
    echo ""
    echo "Building: $PROJECT_DIR"
    echo ""
    echo "Using the following tools:"
    echo "-- CMake:       $CMAKE"
    echo "-- QMake:       $QMAKE"
    echo "-- CC:          $CC"
    echo "-- CXX:         $CXX"
    echo "-- Platform:    $PLATFORM"
    echo "-- Arch:        $ARCH"
    if [ $PLATFORM == "Darwin" ]; then
        echo "-- App Store:   $APP_STORE"
        echo "-- Bundle ID:   $BUNDLE_ID"
    fi
    echo "-- CMake Flags: $CMAKE_FLAGS"
}

PROJECT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

CMAKE_FLAGS="-DDOCS=OFF -DCMAKE_BUILD_TYPE=Debug"
CPACK_FLAGS=""

CMAKE=`which cmake`
QMAKE=`readlink \`which qmake\``
CC=`readlink \`which cc\``
CXX=`readlink \`which c++\``
#CMAKE_C_LINK_EXECUTABLE=

APP_STORE="OFF"
BUNDLE_ID="com.stitchworkssoftware.CrochetCharts"

while getopts ":a" opt; do
  case $opt in
    a)
      #-a is for Apple App Store
      APP_STORE="ON"
      BUNDLE_ID="com.stitchworkssoftware.CrochetCharts"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

export CC=/usr/bin/clang
export CXX=/usr/bin/clang++
    
PLATFORM=`uname -s`
ARCH=`uname -m`

mkdir -p ${PROJECT_DIR}/build
cd ${PROJECT_DIR}/build

if [ $PLATFORM == "Darwin" ]; then

    MACOSX_DEPLOYMENT_TARGET=10.6
    MACOSX_SDK="/Developer/SDKs/MacOSX10.6.sdk/"
    QMAKE="/usr/local/Trolltech/Qt-4.8.4/bin/qmake"
    
    CMAKE_FLAGS="$CMAKE_FLAGS -DQT_QMAKE_EXECUTABLE=$QMAKE"
    CMAKE_FLAGS="$CMAKE_FLAGS -DAPP_STORE=$APP_STORE"
    CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_OSX_DEPLOYMENT_TARGET=10.6"
    CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_OSX_SYSROOT=$MACOSX_SDK"
    CMAKE_FLAGS="$CMAKE_FLAGS -DBUNDLE_ID=$BUNDLE_ID"
    
elif [ $PLATFORM == "Linux" ]; then

    CMAKE_MODULE_PATH="/opt/Qt/5.1.0-alpha/lib/cmake"
    QMAKE="/opt/Qt/5.1.0-alpha/bin/qmake"
    CMAKE_PREFIX_PATH="/opt/Qt/5.1.0-alpha/" 

    if [ $ARCH == "i686" ]; then
      CMAKE_FLAGS="$CMAKE_FLAGS -DFORCE_32BIT=ON"
    fi

    #export CMAKE_MODULE_PATH CMAKE_PREFIX_PATH
    CMAKE_FLAGS="$CMAKE_FLAGS -DQT_QMAKE_EXECUTABLE=$QMAKE"
    CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_MODULE_PATH=$CMAKE_MODULE_PATH"
    CMAKE_FLAGS="$CMAKE_FLAGS -DCMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH"
else
    echo "-- ERROR: unknown platform"
    exit 0
fi

display_vairiables

cmake ${PROJECT_DIR} ${CMAKE_FLAGS}
make
